`1350600484s_list` <- read.delim("~/arXiv papers/Systems Biology Class/arXiv/1350600484s_list.xls", header=F)
View(`1350600484s_list`)
`1350600484s_list` <- read.delim("~/arXiv papers/Systems Biology Class/arXiv/1350600484s_list.xls")
View(`1350600484s_list`)
source("http://faculty.ucr.edu/~tgirke/Documents/R_BioCond/My_R_Scripts/overLapper.R")
siRNA.primary.hits.lists <- read.delim("~/R/working directory/siRNA primary hits lists.txt")
View(siRNA.primary.hits.lists)
sets <- read.delim(siRNA primary hits lists.txt"); setlistImp <- lapply(colnames(sets), function(x) as.character(sets[sets[,x]!="", x])); names(setlistImp) <- colnames(sets)
sets <- read.delim("siRNA primary hits lists.txt"); setlistImp <- lapply(colnames(sets), function(x) as.character(sets[sets[,x]!="", x])); names(setlistImp) <- colnames(sets)
sets <- read.delim("~/R/working directory/siRNA primary hits lists.txt"); setlistImp <- lapply(colnames(sets), function(x) as.character(sets[sets[,x]!="", x])); names(setlistImp) <- colnames(sets)
OLlist <- overLapper(setlist=setlist, sep="", type="vennsets"); OLlist; names(OLlis)
setlist <- list(A=sample(letters, 18), B=sample(letters, 16), C=sample(letters, 20), D=sample(letters, 22), E=sample(letters, 18), F=sample(letters, 22, replace=T))
OLlist <- overLapper(setlist=setlist, sep="", type="vennsets"); OLlist; names(OLlis)
source("http://faculty.ucr.edu/~tgirke/Documents/R_BioCond/My_R_Scripts/overLapper.R")
setlist <- list(A=BRASS, B=SHAPIRA, C=KARLAS, D=KINOG, E=HAO)
setlist <- list(BRASS=sample(numbers, 250), SHAPIRA=sample(numbers, 220), KARLAS=sample(numbers, 287), KONIG=sample(numbers, 295), HAO=sample(numbers, 130))
citation()
citation(gplots)
citation(gplot)
citation(graphics)
citation("graphics")
endog98lists <- read.delim("~/arXiv papers/candidacy stuff/new version 2/endog98lists.txt")
View(endog98lists)
endog98lists <- read.delim("~/arXiv papers/candidacy stuff/new version 2/endog98lists.txt")
View(endog98lists)
setlist <- list(N98PPI=as.character(endog98lists [,1]),
N98KD1up=as.character(endog98lists [,2]),
N98KD1down=as.character(endog98lists [,3]),
N98KD2up=as.character(endog98lists [,4]),
N98KD2down=as.character(endog98lists [,5]),
N98NtOEup=as.character(endog98lists [,6]),
N98NtOEdown=as.character(endog98lists [,7]),
N98ChIP=as.character(endog98lists [,8]),
N98Fdam=as.character(endog98lists [,9]),
N98NTdam=as.character(endog98lists [,10]),
setlist <- list(N98PPI=as.character(endog98lists [,1]),                 N98KD1up=as.character(endog98lists [,2]),
+                 N98KD1down=as.character(endog98lists [,3]),
+                 N98KD2up=as.character(endog98lists [,4]),
+                 N98KD2down=as.character(endog98lists [,5]),
+                 N98NtOEup=as.character(endog98lists [,6]),
+                 N98NtOEdown=as.character(endog98lists [,7]),
+                 N98ChIP=as.character(endog98lists [,8]),
+                 N98Fdam=as.character(endog98lists [,9]),
+                 N98NTdam=as.character(endog98lists [,10]),
+                 N98NPCdam=as.character(endog98lists [,11]),
+                 N98Fdam2=as.character(endog98lists [,12]),
+                 N98NTdam2=as.character(endog98lists [,13]),
+                 All_lists=as.character(endog98lists [,14]))
setlist <- list(N98PPI=as.character(endog98lists [,1]),
N98KD1up=as.character(endog98lists [,2]),
N98KD1down=as.character(endog98lists [,3]),
N98KD2up=as.character(endog98lists [,4]),
N98KD2down=as.character(endog98lists [,5]),
N98NtOEup=as.character(endog98lists [,6]),
N98NtOEdown=as.character(endog98lists [,7]),
N98ChIP=as.character(endog98lists [,8]),
N98Fdam=as.character(endog98lists [,9]),
N98NTdam=as.character(endog98lists [,10]),
N98NPCdam=as.character(endog98lists [,11]),
N98Fdam2=as.character(endog98lists [,12]),
N98NTdam2=as.character(endog98lists [,13]),
All_lists=as.character(endog98lists [,14]))
OLlist <- overLapper(setlist=setlist, sep="", type="vennsets"); OLlist; names(OLlist)
source("http://faculty.ucr.edu/~tgirke/Documents/R_BioCond/My_R_Scripts/overLapper.R")
OLlist <- overLapper(setlist=setlist, sep="", type="vennsets"); OLlist; names(OLlist)
endog98lists <- read.delim("~/arXiv papers/candidacy stuff/new version 2/endog98lists.txt")
View(endog98lists)
setlist <- list(N98PPI=as.character(endog98lists [,1]),
N98KD1up=as.character(endog98lists [,2]),
N98KD1down=as.character(endog98lists [,3]),
N98KD2up=as.character(endog98lists [,4]),
N98KD2down=as.character(endog98lists [,5]),
N98NtOEup=as.character(endog98lists [,6]),
N98NtOEdown=as.character(endog98lists [,7]),
N98ChIP=as.character(endog98lists [,8]),
N98Fdam=as.character(endog98lists [,9]),
N98NTdam=as.character(endog98lists [,10]),
N98NPCdam=as.character(endog98lists [,11]),
N98Fdam2=as.character(endog98lists [,12]),
N98NTdam2=as.character(endog98lists [,13]),
All_lists=as.character(endog98lists [,14]))
OLlist <- overLapper(setlist=setlist, sep="", type="vennsets"); OLlist; names(OLlist)
olBarplot(OLlist=OLlist, horiz=T, las=1, cex.names=0.6, main="Venn Bar Plot")
olBarplot(OLlist=OLlist, horiz=T, las=1, cex.names=0.6,mincount=1, main="Venn Bar Plot")
OLexport <- as.matrix(unlist(sapply(OLlist5[[4]], paste, collapse=" ")))
write.table(OLexport, file="matrixexp.xls", col.names=F, quote=F, sep="\t")
OLexport <- as.matrix(unlist(sapply(OLlist5[[4]], paste, collapse=" ")))
OLexport <- as.matrix(unlist(sapply(OLlist[[4]], paste, collapse=" ")))
write.table(OLexport, file="matrixexp.xls", col.names=F, quote=F, sep="\t")
OLexport <- data.frame(Venn_Comp=rep(names(OLlist[[4]]), sapply(OLlist[[4]], length)), IDs=unlist(OLlist5[[4]]))
write.table(OLexport, file="tabularexp.xls", row.names=F, quote=F, sep="\t")
OLexport <- data.frame(Venn_Comp=rep(names(OLlist[[4]]), sapply(OLlist[[4]], length)), IDs=unlist(OLlist[[4]]))
write.table(OLexport, file="tabularexp.xls", row.names=F, quote=F, sep="\t")
counts <- sapply(OLlist[[4]], length)
counts <- sapply(OLlist[[4]], length)
tapply(counts, OLlist[[3]], function(x) rev(sort(x)))
olMA <- sapply(names(setlist), function(x) sapply(names(setlist), function(y) sum(setlist[[x]] %in% setlist[[y]]))); olMA
library("gplots"); heatmap.2(olMA, trace="none", Colv="none", Rowv="none", dendrogram="none", col=colorpanel(40, "darkred", "orange", "yellow"))
heatmap.2(olMA, trace="none", col=colorpanel(40, "darkred", "orange", "yellow"))
paMA <- overLapper(setlist=setlist, type="intersects", complexity=2)[[2]]
paMA[names(rev(sort(rowSums(paMA)))),]
library("gplots"); heatmap.2(paMA, trace="none", Colv="none", Rowv="none", dendrogram="none", col=c("white", "gray"))
View(paMA)
View(paMA)
write.csv(paMa, "paMa98endog.csv")
write.csv(paMA, "paMa98endog.csv")
View(OLexport)
fix(OLlist)
endog98lists2 <- read.delim("~/arXiv papers/candidacy stuff/new version 2/endog98lists2.txt")
View(endog98lists2)
source("http://faculty.ucr.edu/~tgirke/Documents/R_BioCond/My_R_Scripts/overLapper.R")
setlist <- list(N98PPI=as.character(endog98lists [,1]),
N98KD1up=as.character(endog98lists [,2]),
N98KD1down=as.character(endog98lists [,3]),
N98KD2up=as.character(endog98lists [,4]),
N98KD2down=as.character(endog98lists [,5]),
N98NtOEup=as.character(endog98lists [,6]),
N98NtOEdown=as.character(endog98lists [,7]),
N98ChIP=as.character(endog98lists [,8]),
N98Fdam=as.character(endog98lists [,9]),
N98NTdam=as.character(endog98lists [,10]),
N98NPCdam=as.character(endog98lists [,11]),
N98Fdam2=as.character(endog98lists [,12]),
N98NTdam2=as.character(endog98lists [,13]))
OLlist <- overLapper(setlist=setlist, sep="", type="vennsets"); OLlist; names(OLlist)
olBarplot(OLlist=OLlist, horiz=T, las=1, cex.names=0.6,mincount=1, main="Venn Bar Plot")
OLexport <- as.matrix(unlist(sapply(OLlist[[4]], paste, collapse=" ")))
write.table(OLexport, file="matrixexp2.xls", col.names=F, quote=F, sep="\t")
OLexport <- data.frame(Venn_Comp=rep(names(OLlist[[4]]), sapply(OLlist[[4]], length)), IDs=unlist(OLlist[[4]]))
write.table(OLexport, file="tabularexp2.xls", row.names=F, quote=F, sep="\t")
counts <- sapply(OLlist[[4]], length)
tapply(counts, OLlist[[3]], function(x) rev(sort(x)))
olMA <- sapply(names(setlist), function(x) sapply(names(setlist), function(y) sum(setlist[[x]] %in% setlist[[y]]))); olMA
library("gplots"); heatmap.2(olMA, trace="none", Colv="none", Rowv="none", dendrogram="none", col=colorpanel(40, "darkred", "orange", "yellow"))
library("gplots"); heatmap.2(olMA, trace="none", Colv="none", Rowv="none", dendrogram="none", col=colorpanel(40, "darkred", "orange", "yellow"))
heatmap.2(olMA, trace="none", col=colorpanel(40, "darkred", "orange", "yellow"))
paMA <- overLapper(setlist=setlist, type="intersects", complexity=2)[[2]]
paMA[names(rev(sort(rowSums(paMA)))),]
write.csv(paMA, "paMa98endog2.csv")
rowSums(paMA)
View(endog98lists2)
endog98lists3 <- read.delim("~/arXiv papers/candidacy stuff/new version 2/endog98lists3.txt")
View(endog98lists3)
setlist <- list(N98PPI=as.character(endog98lists [,1]),
N98KD1up=as.character(endog98lists [,2]),
N98KD1down=as.character(endog98lists [,3]),
N98KD2up=as.character(endog98lists [,4]),
N98KD2down=as.character(endog98lists [,5]),
N98NtOEup=as.character(endog98lists [,6]),
N98NtOEdown=as.character(endog98lists [,7]),
N98ChIP=as.character(endog98lists [,8]),
N98Fdam=as.character(endog98lists [,9]),
N98NTdam=as.character(endog98lists [,10]),
N98NPCdam=as.character(endog98lists [,11]),
N98Fdam2=as.character(endog98lists [,12]),
N98NTdam2=as.character(endog98lists [,13]))
OLlist <- overLapper(setlist=setlist, sep="", type="vennsets"); OLlist; names(OLlist)
setlist <- list(N98PPI=as.character(endog98lists3 [,1]),
N98KD1up=as.character(endog98lists3 [,2]),
N98KD1down=as.character(endog98lists3 [,3]),
N98KD2up=as.character(endog98lists3 [,4]),
N98KD2down=as.character(endog98lists3 [,5]),
N98NtOEup=as.character(endog98lists3 [,6]),
N98NtOEdown=as.character(endog98lists3 [,7]),
N98ChIP=as.character(endog98lists3 [,8]),
N98Fdam=as.character(endog98lists3 [,9]),
N98NTdam=as.character(endog98lists3 [,10]),
N98NPCdam=as.character(endog98lists3 [,11]),
N98Fdam2=as.character(endog98lists3 [,12]),
N98NTdam2=as.character(endog98lists3 [,13]))
OLlist <- overLapper(setlist=setlist, sep="", type="vennsets"); OLlist; names(OLlist)
olBarplot(OLlist=OLlist, horiz=T, las=1, cex.names=0.6,mincount=1, main="Venn Bar Plot")
olBarplot(OLlist=OLlist, horiz=T, las=1, cex.names=0.6, mincount=1, maxcount=200, main="Venn Bar Plot")
fix(OLlist)
OLlist <- overLapper(setlist=setlist, sep="", type="vennsets"); OLlist; names(OLlist)
counts <- sapply(OLlist[[4]], length)
tapply(counts, OLlist[[3]], function(x) rev(sort(x)))
OLlist
olBarplot(OLlist=OLlist, horiz=T, las=1, cex.names=0.6,mincount=1, main="Venn Bar Plot")
x11(height=12, width=8); olBarplot(OLlist=OLlist, horiz=T, las=1, cex.names=0.6, main="Intersect Bar Plot")
x11(height=12, width=8); olBarplot(OLlist=OLlist, horiz=T, las=1, cex.names=0.6, mincount=1, main="Intersect Bar Plot")
setlist <- sapply(setlist, unique)
olMA <- sapply(names(setlist), function(x) sapply(names(setlist), function(y) sum(setlist[[x]] %in% setlist[[y]]))); olMA
library("gplots"); heatmap.2(olMA, trace="none", Colv="none", Rowv="none", dendrogram="none", col=colorpanel(40, "darkred", "orange", "yellow"))
heatmap.2(olMA, trace="none", col=colorpanel(40, "darkred", "orange", "yellow"))
paMA <- overLapper(setlist=setlist, type="intersects", complexity=2)[[2]]
paMA[names(rev(sort(rowSums(paMA)))),]
paMA <- overLapper(setlist=setlist, type="intersects", complexity=2)[[2]]
paMA[names(rev(sort(rowSums(paMA))),]
paMA <- overLapper(setlist=setlist, type="intersects", complexity=2)[[2]]
paMA[names(rev(sort(rowSums(paMA)))),]
paMA[names(rev(sort(rowSums(paMA)))),]
paMA <- overLapper(setlist=setlist, type="intersects", complexity=2)[[2]]
paMA[names(rev(sort(rowSums(paMA)))),]
library("gplots"); heatmap.2(paMA, trace="none", Colv="none", Rowv="none", dendrogram="none", col=c("white", "gray"))
paMA
write.csv(paMA, "paMa98endog3.csv")
OLexport <- as.matrix(unlist(sapply(OLlist[[4]], paste, collapse=" ")))
write.table(OLexport, file="matrixexp3.xls", col.names=F, quote=F, sep="\t")
library("AnnotationDbi", lib.loc="C:/Users/Juliana/Documents/R/win-library/2.15")
detach("package:Biobase", unload=TRUE)
library("BiocInstaller", lib.loc="C:/Users/Juliana/Documents/R/win-library/2.15")
library("GEOmetadb", lib.loc="C:/Users/Juliana/Documents/R/win-library/2.15")
detach("package:GEOquery", unload=TRUE)
detach("package:AnnotationDbi", unload=TRUE)
library("AnnotationDbi", lib.loc="C:/Users/Juliana/Documents/R/win-library/2.15")
detach("package:BiocGenerics", unload=TRUE)
library("BiocGenerics", lib.loc="C:/Users/Juliana/Documents/R/win-library/2.15")
detach("package:BiocInstaller", unload=TRUE)
library("BiocInstaller", lib.loc="C:/Users/Juliana/Documents/R/win-library/2.15")
detach("package:GEOmetadb", unload=TRUE)
library("GEOquery", lib.loc="C:/Users/Juliana/Documents/R/win-library/2.15")
library("GEOmetadb", lib.loc="C:/Users/Juliana/Documents/R/win-library/2.15")
library("limma", lib.loc="C:/Users/Juliana/Documents/R/win-library/2.15")
library("rstudio", lib.loc="C:/Program Files/RStudio/R/library")
library("manipulate", lib.loc="C:/Program Files/RStudio/R/library")
biocLite()
library(limma)
design <- model.matrix(~ -1+factor(c(1,1,2,2,3,3)))
rstudio::viewData(design)
colnames(design) <- c("group1", "group2", "group3")
rstudio::viewData(design)
`N98Fdam` <- read.delim("~/arXiv papers/candidacy stuff/new version 2/raw data collected/tables for R/N98Fdam.txt")
viewData(`N98Fdam`)
set.seed(31);
heightsCM = rnorm(30,mean=188, sd=5);
weightsK = rnorm(30,mean=84,sd=3);
hasDaughter = sample(c(TRUE,FALSE),size=30,replace=T);
dataFrame = data.frame(heightsCM,weightsK,hasDaughter);
dataFrameSubset[heights < 188, ]
dataFrameSubset = dataFrame[heights < 188, ]
dataFrameSubset <- dataFrame[heightsCM > 188,  ]
mean(dataFrameSubset$weightsK)
set.seed(41)
cauchyValues <- rvcauchy(n=100, location=0, scale=1)
library(rvcauchy)
library(rv)
help("install.packages")
instal.packages(rv)
intal.packages(rvcauchy)
instal.packages(rvcauchy)
install.packages(rv)
install.packages(rvcauchy)
install.packages(rv-package)
set.seed(41)
cauchyValues <- rcauchy(n=100, location=0, scale=1)
set.seed(415)
sample(cauchyValues,size=10,replace=TRUE)
#Some example values
n_A = 100;n_B = 200; n_C = 500; n_A_B = 50
1-phyper(n_A_B, n_B, n_C-n_B, n_A)
1-phyper
1-phyper()
phyper(?)
qhyper(0.05, 1719, 3800, 357, lower.tail = TRUE, log.p = FALSE)
qhyper(0.001, 1719, 3800, 357, lower.tail = TRUE, log.p = FALSE)
qhyper(0.05, 1719, 3800, 357, lower.tail = FALSE, log.p = FALSE)
qhyper(0.001, 1719, 3800, 357, lower.tail = FALSE, log.p = FALSE)
sim=unlist(lapply(1:10000,
function(i){A=sample(1:27511,23706);B=sample(1:27511,14557);return(sum(A %in% B))}))
hist(sim)
sim=unlist(lapply(1:10000,
function(i){A=sample(1:20000,1719);B=sample(1:20000,3800);return(sum(A %in% B))}))
hist(sim)
?hist
hist(sim, freq=FALSE)
hist(sim)
hist(sim, freq=FALSE)
hist(sim, freq=FALSE, breaks=50)
Table.S1.for.R <- read.delim("C:/Users/Juliana/Desktop/Final stuff for the paper/written paper/Table S1 for R.txt")
View(Table.S1.for.R)
Network <- Table.S1.for.R
Network
dotchart(Network$HITS,labels=Network$GENE.SYMBOL,cex=.7,
main="Identified Nup98 binding proteins",
xlab="Number of unique peptides")
dotchart(Network$HITS,labels=Network$GENE.SYMBOL,cex=1,
+          main="Identified Nup98 binding proteins",
+          xlab="Number of unique peptides")
?dotchart
dotchart(Network$HITS,labels=Network$GENE.SYMBOL,cex=.5,
+          main="Identified Nup98 binding proteins",
+          xlab="Number of unique peptides")
dotchart(Network$HITS,labels=Network$GENE.SYMBOL,cex=.5,main="Identified Nup98 binding proteins",xlab="Number of unique peptides")
dotchart(Network$HITS,labels=Network$GENE.SYMBOL,cex=.3,main="Identified Nup98 binding proteins",xlab="Number of unique peptides")
install.packages("Rtools")
install.packages("lumi")
install.packages("beadarray")
library(lumi)
library(beadarray)
source("http://bioconductor.org/biocLite.R")
biocLite("lumi")
?hclust
?dist
?cor
# Version info: R 2.14.1, Biobase 2.15.3, GEOquery 2.23.2, limma 3.10.1
# R scripts generated  Wed Feb 20 17:29:19 EST 2013
################################################################
#   Differential expression analysis with limma
library(Biobase)
library(GEOquery)
library(limma)
# load series and platform data from GEO
gset <- getGEO("GSE37900", GSEMatrix =TRUE)
if (length(gset) > 1) idx <- grep("GPL6887", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
# make proper column names to match toptable
fvarLabels(gset) <- make.names(fvarLabels(gset))
# group names for all samples
sml <- c("G0","G0","G0","G1","G1","G1","X","X","X");
# eliminate samples marked as "X"
sel <- which(sml != "X")
sml <- sml[sel]
gset <- gset[ ,sel]
# set up the data and proceed with analysis
fl <- as.factor(sml)
gset$description <- fl
design <- model.matrix(~ description + 0, gset)
colnames(design) <- levels(fl)
fit <- lmFit(gset, design)
cont.matrix <- makeContrasts(G1-G0, levels=design)
fit2 <- contrasts.fit(fit, cont.matrix)
fit2 <- eBayes(fit2, 0.01)
tT <- topTable(fit2, adjust="fdr", sort.by="B", number=250)
# load NCBI platform annotation
gpl <- annotation(gset)
platf <- getGEO(gpl, AnnotGPL=TRUE)
ncbifd <- data.frame(attr(dataTable(platf), "table"))
# replace original platform annotation
tT <- tT[setdiff(colnames(tT), setdiff(fvarLabels(gset), "ID"))]
tT <- merge(tT, ncbifd, by="ID")
tT <- tT[order(tT$P.Value), ]  # restore correct order
tT <- subset(tT, select=c("ID","adj.P.Val","P.Value","t","B","logFC","Gene.symbol","Gene.title"))
write.table(tT, file=stdout(), row.names=F, sep="\t")
fix(gset)
#   Boxplot for selected GEO samples
library(Biobase)
library(GEOquery)
# load series and platform data from GEO
gset <- getGEO("GSE37900", GSEMatrix =TRUE)
if (length(gset) > 1) idx <- grep("GPL6887", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
# group names for all samples in a series
sml <- c("G0","G0","G0","G1","G1","G1","X","X","X")
# eliminate samples marked as "X"
sel <- which(sml != "X")
sml <- sml[sel]
gset <- gset[ ,sel]
# order samples by group
ex <- exprs(gset)[ , order(sml)]
sml <- sml[order(sml)]
fl <- as.factor(sml)
labels <- c("CDX1","CDX4")
# set parameters and draw the plot
palette(c("#f2cb98","#f4dfdf", "#AABBCC"))
dev.new(width=4+dim(gset)[[2]]/5, height=6)
par(mar=c(2+round(max(nchar(sampleNames(gset)))/2),4,2,1))
title <- paste ("GSE37900", '/', annotation(gset), " selected samples", sep ='')
boxplot(ex, boxwex=0.6, notch=T, main=title, outline=FALSE, las=2, col=fl)
legend("topleft", labels, fill=palette(), bty="n")
setwd("~/arXiv papers/candidacy stuff/new version 2/Nup98 fusions")
FusionsList <- read.delim("~/arXiv papers/candidacy stuff/new version 2/Nup98 fusions/comparison of gene lists in R.txt")
View(FusionsList)
View(FusionsList)
comparison.of.gene.lists.in.R <- read.delim("~/arXiv papers/candidacy stuff/new version 2/Nup98 fusions/comparison of gene lists in R.txt")
View(comparison.of.gene.lists.in.R)
list <- comparison.of.gene.lists.in.R
genelist <- comparison.of.gene.lists.in.R
View(list)
setlist <- list(NHA10.vs.GFP=as.character(genelist [,1]),
NHD13.vs.GFP=as.character(genelist [,2]),
NHD13mut.vs.GFP=as.character(genelist [,3]),
NHEX.vs.GFP=as.character(genelist [,4]),
NHA9.vs.GFP=as.character(genelist [,5]),
NHA9GMP.vs.GMP=as.character(genelist [,6]),
NHA9GMP.vs.GFPGMP=as.character(genelist [,7]),
NHA9GMP.vs.HSC=as.character(genelist [,8]),
CDX4.vs.GFP=as.character(genelist [,9]),
CDX1.vs.GFP=as.character(genelist [,10]),
NHA9.vs.LNBM=as.character(genelist [,11]),
NHD13LNBM.vs.LNBM=as.character(genelist [,12]),
NHD13WBM.vs.WBM=as.character(genelist [,13]),
NHD13tum.vs.LNBM=as.character(genelist [,14]),
NHD13tum.vs.WBM=as.character(genelist [,15]))
OLlist <- overLapper(setlist=setlist, sep="", type="vennsets"); OLlist; names(OLlist)
source("http://faculty.ucr.edu/~tgirke/Documents/R_BioCond/My_R_Scripts/overLapper.R")
OLlist <- overLapper(setlist=setlist, sep="", type="vennsets"); OLlist; names(OLlist)
OLexport <- as.matrix(unlist(sapply(OLlist[[4]], paste, collapse=" ")))
write.table(OLexport, file="matrixexp.xls", col.names=F, quote=F, sep="\t")
paMA <- overLapper(setlist=setlist, type="intersects", complexity=2)[[2]]
write.csv(paMA, "paMa98fusion.csv")
olMA <- sapply(names(setlist), function(x) sapply(names(setlist), function(y) sum(setlist[[x]] %in% setlist[[y]]))); olMA
write.csv(olMA, "olMA98fusion.csv")
?olMA
?setlist
summary(setlist)
lapply(setlist, na.exclude)
summary(setlist)
?as.character
setlist2 <- list(NHA10.vs.GFP=(na.exclude(as.character(genelist [,1]))),
NHD13.vs.GFP=(na.exclude(as.character(genelist [,2]))),
NHD13mut.vs.GFP=(na.exclude(as.character(genelist [,3]))))
summary(setlist2)
setlist2 <- list(NHA10.vs.GFP=(na.exclude(as.character(genelist [,1]))),
NHD13.vs.GFP=(na.exclude(as.character(genelist [,2]))),
NHD13mut.vs.GFP=(na.exclude(as.character(genelist [,3]))))
setlist3 <- list(NHA10.vs.GFP2=lapply(NHA10.vs.GFP, na.exclude), NHD13.vs.GFP2=lapply(NHD13.vs.GFP, na.exclude), NHD13mut.vs.GFP2=lapply(NHD13mut.vs.GFP, na.exclude))
setlist3 <- list(NHA10.vs.GFP2=lapply(setlist$NHA10.vs.GFP, na.exclude), NHD13.vs.GFP2=lapply(setlist$NHD13.vs.GFP, na.exclude), NHD13mut.vs.GFP2=lapply(setlist$NHD13mut.vs.GFP, na.exclude))
summary(setlist3)
genelist2 <- read.csv("comparison of gene lists in R.csv", na.strings = "")
View(genelist2)
setlist4 <- list(NHA10.vs.GFP=as.character(genelist2 [,1]),
NHD13.vs.GFP=as.character(genelist2 [,2]),
NHD13mut.vs.GFP=as.character(genelist2 [,3]),
NHEX.vs.GFP=as.character(genelist2 [,4]),
NHA9.vs.GFP=as.character(genelist2 [,5]),
NHA9GMP.vs.GMP=as.character(genelist2 [,6]),
NHA9GMP.vs.GFPGMP=as.character(genelist2 [,7]),
NHA9GMP.vs.HSC=as.character(genelist2 [,8]),
CDX4.vs.GFP=as.character(genelist2 [,9]),
CDX1.vs.GFP=as.character(genelist2 [,10]),
NHA9.vs.LNBM=as.character(genelist2 [,11]),
NHD13LNBM.vs.LNBM=as.character(genelist2 [,12]),
NHD13WBM.vs.WBM=as.character(genelist2 [,13]),
NHD13tum.vs.LNBM=as.character(genelist2 [,14]),
NHD13tum.vs.WBM=as.character(genelist2 [,15]))
summary(setlist4)
setlist5 <- list(NHA10.vs.GFP2=lapply(setlist4$NHA10.vs.GFP, na.exclude), NHD13.vs.GFP2=lapply(setlist4$NHD13.vs.GFP, na.exclude), NHD13mut.vs.GFP2=lapply(setlist4$NHD13mut.vs.GFP, na.exclude))
summary(setlist5)
olMA <- sapply(names(setlist4), function(x) sapply(names(setlist4), function(y) sum(setlist4[[x]] %in% setlist4[[y]]))); olMA
olMA <- sapply(names(setlist4), function(x) x[!is.na(x)] sapply(names(setlist4), function(y) sum(setlist4[[x]] %in% setlist4[[y]]))); olMA
NHA10.vs.GFP=as.character(genelist [,1])
summarry(NHA10.vs.GFP)
summary(NHA10.vs.GFP)
NHA10 <- lapply(NHA10.vs.GFP, na.exclude)
summary(NHA10)
NHA10.vs.GFP=lapply(as.character(genelist [,1]), function (x) x[!is.na(x)])
summary(NHA10.vs.GFP)
